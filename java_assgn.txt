import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

public class WeatherApp {

    private static final String API_BASE_URL = "https://samples.openweathermap.org/data/2.5/forecast/hourly";
    private static final String API_KEY = "b6907d289e10d714a6e88b30761fae22";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            printMenu();
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    getWeather();
                    break;
                case 2:
                    getWindSpeed();
                    break;
                case 3:
                    getPressure();
                    break;
                case 0:
                    System.out.println("Exiting the program.");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void printMenu() {
        System.out.println("Options:");
        System.out.println("1. Get weather");
        System.out.println("2. Get Wind Speed");
        System.out.println("3. Get Pressure");
        System.out.println("0. Exit");
        System.out.print("Enter your choice: ");
    }

    private static void getWeather() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the date (YYYY-MM-DD format): ");
        String date = scanner.next();
        String response = fetchData(date);
        if (response != null) {
            // Process the JSON response to extract temperature
            String temperature = extractTemperature(response);
            System.out.println("Temperature on " + date + ": " + temperature + "Â°C");
        } else {
            System.out.println("Weather data not found for the given date.");
        }
    }

    private static void getWindSpeed() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the date (YYYY-MM-DD format): ");
        String date = scanner.next();
        String response = fetchData(date);
        if (response != null) {
            // Process the JSON response to extract wind speed
            String windSpeed = extractWindSpeed(response);
            System.out.println("Wind speed on " + date + ": " + windSpeed + " m/s");
        } else {
            System.out.println("Wind speed data not found for the given date.");
        }
    }

    private static void getPressure() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the date (YYYY-MM-DD format): ");
        String date = scanner.next();
        String response = fetchData(date);
        if (response != null) {
            // Process the JSON response to extract pressure
            String pressure = extractPressure(response);
            System.out.println("Pressure on " + date + ": " + pressure + " hPa");
        } else {
            System.out.println("Pressure data not found for the given date.");
        }
    }

    private static String fetchData(String date) {
        try {
            URL url = new URL(API_BASE_URL + "?q=London,us&appid=" + API_KEY);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            int responseCode = conn.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }

                in.close();
                return response.toString();
            } else {
                System.out.println("Error: " + responseCode);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    
    private static String extractTemperature(String response) {
        
        return "25.0";
    }

    
    private static String extractWindSpeed(String response) {
        
        return "5.0";
    }

    
    private static String extractPressure(String response) {
        return "1015";
    }
}
